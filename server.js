const express = require("express");
const axios = require("axios");
const app = express();
const PORT = process.env.PORT || 3000;

const WEBHOOK = "https://itnasr.bitrix24.kz/rest/1/bucjza1li2wbp6lr/";

// –û—á–∏—Å—Ç–∫–∞ WhatsApp –≤ —Å–¥–µ–ª–∫–µ
app.get("/clean", async (req, res) => {
  const dealId = req.query.deal_id;
  if (!dealId) return res.status(400).send("‚ùå –ù–µ –ø–µ—Ä–µ–¥–∞–Ω deal_id");

  try {
    const dealRes = await axios.post(`${WEBHOOK}crm.deal.get`, { id: dealId });
    const deal = dealRes.data?.result;
    if (!deal) return res.status(404).send("‚ùå –°–¥–µ–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");

    let rawPhone = null;

    // 1. –ò—â–µ–º –Ω–æ–º–µ—Ä –≤ TITLE
    const titleMatch = deal.TITLE?.match(/(?:\+?\d[\d\s\-().]{6,})/);
    if (titleMatch) {
      rawPhone = titleMatch[0];
      console.log("üìå –¢–µ–ª–µ—Ñ–æ–Ω –∏–∑ TITLE:", rawPhone);
    }

    // 2. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –ø–æ–ª—É—á–∞–µ–º –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    if (!rawPhone && deal.CONTACT_ID) {
      const contactRes = await axios.post(`${WEBHOOK}crm.contact.get`, {
        id: deal.CONTACT_ID,
      });
      const contact = contactRes.data?.result;
      const phoneObj = contact?.PHONE?.find(p => typeof p.VALUE === "string");
      if (phoneObj) {
        rawPhone = phoneObj.VALUE;
        console.log("üìå –¢–µ–ª–µ—Ñ–æ–Ω –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–∞:", rawPhone);
      }
    }

    if (!rawPhone) {
      return res.send("‚ùó –¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ TITLE, –Ω–∏ –≤ –ö–æ–Ω—Ç–∞–∫—Ç–µ");
    }

    const cleanedPhone = rawPhone.replace(/\D/g, "");
    const whatsappLink = `https://wa.me/${cleanedPhone}`;

    await axios.post(`${WEBHOOK}crm.deal.update`, {
      id: dealId,
      fields: {
        UF_CRM_1729359889: whatsappLink,
      },
    });

    res.send(`‚úÖ –°–¥–µ–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: <a href="${whatsappLink}" target="_blank">${whatsappLink}</a>`);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞:", err?.response?.data || err.message);
    res.status(500).send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–¥–µ–ª–∫–∏");
  }
});

// Ping
app.get("/ping", (req, res) => {
  res.send("pong");
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
